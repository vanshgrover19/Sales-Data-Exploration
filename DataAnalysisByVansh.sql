SHOW DATABASES;
USE portfolio_db;
SHOW TABLES;
SELECT * FROM sales_data;

--- GROUPING SALES BY PRODUCT LINE ---

SELECT PRODUCTLINE, ROUND(SUM(SALES), 2) AS TOTAL_REVENUE
FROM sales_data
GROUP BY PRODUCTLINE
ORDER BY TOTAL_REVENUE DESC;

-- WHICH YEAR MADE THE MOST SALES --

SELECT YEAR_ID, ROUND(SUM(SALES), 2) AS TOTAL_REVENUE
FROM sales_data
GROUP BY YEAR_ID

ORDER BY TOTAL_REVENUE DESC;
---- (year 2004 made the most sales, then 2003, then 2005) ----

--- MONTHS OPERATED IN EACH YEAR ---

 SELECT YEAR_ID, MAX(MONTH_ID) AS MONTHS_OPERATED
 FROM sales_data
 GROUP BY YEAR_ID
 ORDER BY 2 DESC;
 ---- (12 months in 2003, 2004 and 5 months in 2005) ----
 
 -- WHICH TYPE OF DEAL MADE THE MOST SALES --
 
 SELECT DEALSIZE, ROUND(SUM(SALES), 2) AS TOTAL_SALES
 FROM sales_data
 GROUP BY DEALSIZE
 ORDER BY 2 DESC;
 ---- (MEDIUM did the most sales, then SMALL, then LARGE) ----
 
 --- WHAT WAS THE BEST MONTH FOR SALE IN A SPECIFIC YEAR? HOW MUCH WAS EARNED THAT MONTH? ---
 
 SELECT MONTH_ID, ROUND(SUM(SALES), 2), COUNT(ORDERNUMBER) AS ORDERED_QTY
 FROM sales_data
 WHERE YEAR_ID = 2003
 GROUP BY MONTH_ID
 ORDER BY 2 DESC;
 
 SELECT MONTH_ID, ROUND(SUM(SALES), 2) AS TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDERED_QTY
 FROM sales_data
 WHERE YEAR_ID = 2004
 GROUP BY MONTH_ID
 ORDER BY 2 DESC;
 
 SELECT MONTH_ID, ROUND(SUM(SALES), 2) AS TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDERED_QTY
 FROM sales_data
 WHERE YEAR_ID = 2005
 GROUP BY MONTH_ID
 ORDER BY 2 DESC;
 --- (NOVEMBER MONTH MADE THE MOST SALES IN 2003 & 2004) ----
 ---- (MAY MONTH MADE THE MOST SALES IN 2005) ----
 
 --- WHAT PRODUCT DO THE SELL THE MOST IN NOVEMBER 2003, 2004 AND MAY 2005) ---
 
 SELECT PRODUCTLINE, ROUND(SUM(SALES), 2) AS TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDERED_QTY
 FROM sales_data
 WHERE YEAR_ID = 2003 AND MONTH_ID = 11
 GROUP BY PRODUCTLINE
 ORDER BY 2 DESC;
 
SELECT PRODUCTLINE, ROUND(SUM(SALES), 2) AS TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDERED_QTY
FROM sales_data
WHERE YEAR_ID = 2004 AND MONTH_ID = 11
GROUP BY PRODUCTLINE
ORDER BY 2 DESC;

SELECT PRODUCTLINE, ROUND(SUM(SALES), 2) AS TOTAL_SALES, COUNT(ORDERNUMBER) AS ORDERED_QTY
FROM sales_data
WHERE YEAR_ID = 2005 AND MONTH_ID = 5
GROUP BY PRODUCTLINE
ORDER BY 2 DESC;

--- WHO IS OUR BEST CUSTOMER? (RFM ANALYSIS) ---

SELECT CUSTOMERNAME, 
		ROUND(SUM(SALES), 2) AS TOTAL_SALES,
        ROUND(AVG(SALES), 2) AS AVG_SALES,
        COUNT(ORDERNUMBER) AS ORDERED_QTY,
        MAX(ORDERDATE) AS LAST_ORDER_DATE
FROM sales_data
GROUP BY CUSTOMERNAME
ORDER BY 2 DESC;

----------------------------------------------
USE portfolio_db;
CREATE TEMPORARY TABLE IF NOT EXISTS RFM AS 
SELECT 
    CUSTOMERNAME,
    ROUND(SUM(SALES), 2) AS TOTAL_SALES,
    ROUND(AVG(SALES), 2) AS AVG_SALES,
    COUNT(ORDERNUMBER) AS ORDERED_QTY,
    MAX(ORDERDATE) AS LAST_ORDER_DATE,
    NTILE(4) OVER (ORDER BY MAX(ORDERDATE) DESC) AS RFM_RECENCY,
    NTILE(4) OVER (ORDER BY COUNT(ORDERNUMBER)) AS RFM_FRECENCY,
    NTILE(4) OVER (ORDER BY AVG(SALES)) AS RFM_MONETARY,
    NTILE(4) OVER (ORDER BY MAX(ORDERDATE) DESC) +
    NTILE(4) OVER (ORDER BY COUNT(ORDERNUMBER)) +
    NTILE(4) OVER (ORDER BY AVG(SALES)) AS RFM_CELL,
    CONCAT(
        CAST(NTILE(4) OVER (ORDER BY MAX(ORDERDATE) DESC) AS CHAR),
        CAST(NTILE(4) OVER (ORDER BY COUNT(ORDERNUMBER)) AS CHAR),
        CAST(NTILE(4) OVER (ORDER BY AVG(SALES)) AS CHAR)
    ) AS RFM_CELL_STRING
FROM sales_data
GROUP BY CUSTOMERNAME
ORDER BY TOTAL_SALES DESC;

 SELECT CUSTOMERNAME, RFM_RECENCY, RFM_FRECENCY, RFM_MONETARY,
	CASE
    WHEN RFM_CELL_STRING IN (111, 112, 121, 122, 123, 132, 211, 212, 114, 141) THEN 'LOST_CUSTOMERS'
    WHEN RFM_CELL_STRING IN (133, 134, 143, 244, 334, 343, 344, 144) THEN 'SLIPPING AWAY, CANNOT LOSE'
    WHEN RFM_CELL_STRING IN (311, 411, 331) THEN 'NEW CUSTOMERS'
    WHEN RFM_CELL_STRING IN (222, 223, 233, 322) THEN 'POTENTIAL CHURNERS'
    WHEN RFM_CELL_STRING IN (323, 333, 321, 321, 422, 332, 432) THEN 'ACTIVE'
    WHEN RFM_CELL_STRING IN (433, 434, 443, 444) THEN 'LOYAL'
END RFM_SEGMENT
FROM RFM;


--- WHAT PRODUCTS ARE MOST OFTEN SOLD TOGETHER ---

SELECT ORDERNUMBER, COUNT(ORDERNUMBER)
FROM sales_data
WHERE STATUS = 'Shipped'
GROUP BY ORDERNUMBER;

-- SELECTING ALL RECORDS WHERE OPRDER NUMBER = 10411
SELECT ORDERNUMBER
FROM(
	SELECT ORDERNUMBER, COUNT(ORDERNUMBER) RN
	FROM sales_data
	WHERE STATUS = 'Shipped'
	GROUP BY ORDERNUMBER) M
WHERE RN = 2;

-- LOOKING AT PRODUCT CODE FOR THESE ORDERS --
SELECT PRODUCTCODE
FROM sales_data
WHERE ORDERNUMBER IN(
		SELECT ORDERNUMBER
		FROM(
			SELECT ORDERNUMBER, COUNT(ORDERNUMBER) RN
			FROM sales_data
			WHERE STATUS = 'Shipped'
			GROUP BY ORDERNUMBER) M
WHERE RN = 2);

---------------------

SELECT CONCAT (',', PRODUCTCODE)
FROM sales_data
WHERE ORDERNUMBER IN(
		SELECT ORDERNUMBER
		FROM(
			SELECT ORDERNUMBER, COUNT(ORDERNUMBER) RN
			FROM sales_data
			WHERE STATUS = 'Shipped'
			GROUP BY ORDERNUMBER) M
WHERE RN = 2);

------------------------------------------

SELECT CONCAT (',', PRODUCTCODE)
FROM sales_data
WHERE ORDERNUMBER IN(
		SELECT ORDERNUMBER
		FROM(
			SELECT ORDERNUMBER, COUNT(ORDERNUMBER) RN
			FROM sales_data
			WHERE STATUS = 'Shipped'
			GROUP BY ORDERNUMBER) M
WHERE RN = 2);







        

 
 









 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

